{"ast":null,"code":"var _jsxFileName = \"/Users/jackiedong/Desktop/CSProjects/YMajors/client/src/components/Home/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport MajorDataService from \"../../services/MajorRequirements.js\";\nimport SearchBar from \"../SearchBar\";\nimport MajorNames from \"../../data/data.json\";\nimport UserContext from \"../../contexts/UserContext\";\nimport \"./index.scss\";\nimport { menuItems } from \"../../menuitems.js\";\nimport Box from \"@mui/material/Box\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const {\n    checkContext\n  } = useContext(UserContext);\n  const [major, setMajor] = useState(menuItems);\n  const [searchName, setSearchName] = useState(\"\");\n  const [checked, setChecked] = useState([]);\n  const useStyles = makeStyles({\n    gridContainer: {\n      paddingLeft: \"85px\",\n      paddingRight: \"85px\"\n    },\n    root: {\n      minWidth: 200\n    },\n    bullet: {\n      display: \"inline-block\",\n      margin: \"0 2px\",\n      transform: \"scale(0.8)\"\n    },\n    title: {\n      fontSize: 14\n    },\n    pos: {\n      marginBottom: 12\n    }\n  });\n  const classes = useStyles();\n  useEffect(() => {\n    getMajor();\n  }, []);\n\n  const onChangeSearchName = e => {\n    const searchName = e.target.value;\n    setSearchName(searchName);\n  };\n\n  const getMajor = async (query, by) => {\n    MajorDataService.find(query, by).then(response => {\n      setMajor(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const renderCourseRequirements = courseList => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: courseList.map((course, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: course,\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: course\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderComponents = components => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: components.map((component, index) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: component.component_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Required Number of Courses: \", component.required_num_courses]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), renderCourseRequirements(component.course_list)]\n        }, void 0, true);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderComponentFamilies = componentFamilies => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 5,\n      className: classes.gridContainer,\n      justify: \"center\",\n      children: componentFamilies.map((componentFamily, index) => {\n        if (componentFamily.component_list.length > 1) return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.root,\n            variant: \"outlined\",\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.title,\n                color: \"textSecondary\",\n                gutterBottom: true,\n                children: componentFamily.component_family_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.pos,\n                color: \"textSecondary\",\n                children: [\"Required Number of Components :\", \" \", componentFamily.required_num_components]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this);\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: classes.root,\n              variant: \"outlined\",\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes.title,\n                  color: \"textSecondary\",\n                  gutterBottom: true,\n                  children: componentFamily.component_family_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container home\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      placeholder: \"Enter Major Name ...\",\n      data: MajorNames,\n      onChange: value => getMajor(value, \"name\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), Array.isArray(major.majorComponentFamilies) && major.majorComponentFamilies.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [major.majorName, \" (\", major.majorCode, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), renderComponentFamilies(major.majorComponentFamilies)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"xpD9AXu1+vEm3bx9Uv5YVvxx22c=\", true);\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useContext","MajorDataService","SearchBar","MajorNames","UserContext","menuItems","Box","CardActions","CardContent","Card","Typography","Grid","makeStyles","Home","checkContext","major","setMajor","searchName","setSearchName","checked","setChecked","useStyles","gridContainer","paddingLeft","paddingRight","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","classes","getMajor","onChangeSearchName","e","target","value","query","by","find","then","response","data","catch","console","log","renderCourseRequirements","courseList","map","course","index","renderComponents","components","component","component_name","required_num_courses","course_list","renderComponentFamilies","componentFamilies","componentFamily","component_list","length","component_family_name","required_num_components","Array","isArray","majorComponentFamilies","majorName","majorCode"],"sources":["/Users/jackiedong/Desktop/CSProjects/YMajors/client/src/components/Home/index.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport MajorDataService from \"../../services/MajorRequirements.js\";\nimport SearchBar from \"../SearchBar\";\nimport MajorNames from \"../../data/data.json\";\nimport UserContext from \"../../contexts/UserContext\";\nimport \"./index.scss\";\nimport { menuItems } from \"../../menuitems.js\";\nimport Box from \"@mui/material/Box\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst Home = () => {\n  const { checkContext } = useContext(UserContext);\n  const [major, setMajor] = useState(menuItems);\n  const [searchName, setSearchName] = useState(\"\");\n  const [checked, setChecked] = useState([]);\n\n  const useStyles = makeStyles({\n    gridContainer: {\n      paddingLeft: \"85px\",\n      paddingRight: \"85px\",\n    },\n    root: {\n      minWidth: 200,\n    },\n    bullet: {\n      display: \"inline-block\",\n      margin: \"0 2px\",\n      transform: \"scale(0.8)\",\n    },\n    title: {\n      fontSize: 14,\n    },\n    pos: {\n      marginBottom: 12,\n    },\n  });\n\n  const classes = useStyles();\n  useEffect(() => {\n    getMajor();\n  }, []);\n\n  const onChangeSearchName = (e) => {\n    const searchName = e.target.value;\n    setSearchName(searchName);\n  };\n\n  const getMajor = async (query, by) => {\n    MajorDataService.find(query, by)\n      .then((response) => {\n        setMajor(response.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const renderCourseRequirements = (courseList) => {\n    return (\n      <div>\n        {courseList.map((course, index) => {\n          return (\n            <div key={index}>\n              <input value={course} type=\"checkbox\" />\n              <span>{course}</span>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const renderComponents = (components) => {\n    return (\n      <div>\n        {components.map((component, index) => {\n          return (\n            <>\n              <h2>{component.component_name}</h2>\n              <p>\n                Required Number of Courses: {component.required_num_courses}\n              </p>\n              {renderCourseRequirements(component.course_list)}\n            </>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const renderComponentFamilies = (componentFamilies) => {\n    return (\n      <Grid\n        container\n        spacing={5}\n        className={classes.gridContainer}\n        justify=\"center\"\n      >\n        {componentFamilies.map((componentFamily, index) => {\n          if (componentFamily.component_list.length > 1)\n            return (\n              <Grid item xs={12} sm={6} md={4}>\n                <Card className={classes.root} variant=\"outlined\" key={index}>\n                  <CardContent>\n                    <Typography\n                      className={classes.title}\n                      color=\"textSecondary\"\n                      gutterBottom\n                    >\n                      {componentFamily.component_family_name}\n                    </Typography>\n                    <Typography className={classes.pos} color=\"textSecondary\">\n                      Required Number of Components :{\" \"}\n                      {componentFamily.required_num_components}\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n            );\n          return (\n            <>\n              <Grid item xs={12} sm={6} md={4}>\n                <Card className={classes.root} variant=\"outlined\" key={index}>\n                  <CardContent>\n                    <Typography\n                      className={classes.title}\n                      color=\"textSecondary\"\n                      gutterBottom\n                    >\n                      {componentFamily.component_family_name}\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n            </>\n          );\n        })}\n      </Grid>\n    );\n  };\n\n  return (\n    <div className=\"container home\">\n      <SearchBar\n        placeholder=\"Enter Major Name ...\"\n        data={MajorNames}\n        onChange={(value) => getMajor(value, \"name\")}\n      />\n\n      {Array.isArray(major.majorComponentFamilies) &&\n      major.majorComponentFamilies.length > 0 ? (\n        <>\n          <h1>\n            {major.majorName} ({major.majorCode})\n          </h1>\n          {renderComponentFamilies(major.majorComponentFamilies)}\n        </>\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}